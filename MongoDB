{
  "简介":[
    "MongoDB是一个介于关系数据库和非关系数据库之间的产品，是非关系数据库当中功能最丰富，最像关系数据库的。它支持的数据结构非常松散，
    是类似json的bson格式，因此可以存储比较复杂的数据类型。
    在MongoDB中，一个数据库包含多个集合，类似于MySQL中一个数据库包含多个表；一个集合包含多个文档，类似于MySQL中一个表包含多条数据。
    文档是MongoDB的核心，类似于SQLite数据库（关系数据库）中的每一行数据。多个键及其关联的值放在一起就是文档。
    在Mongodb中使用一种类json的bson存储数据，bson数据可以理解为在json的基础上添加了一些json中没有的数据类型。
    "
  ],
  "文档之间的逻辑关系":{
    "1":	"嵌入式关系",
    "2":	"引用式关系"
  },
  "与MySQL之间的联系":"
    集合就是一组文档的组合，就相当于是关系数据库中的表，在MongoDB中可以存储不同的文档结构的文档。
    MongoDB的数据模型是面向文档的。
    JSON文档中除了数值类型以外，都需要一对引号，MongoDB以二进制JSON格式存储文档数据，或者叫做BSON。MySQL在表的行里保存数据，
    而MongoDB在集合的文档里保存数据，文档不需要遵守严格的数据定义schema，而MySQL的表有严格的schema，制定每个列的数据类型。
    SQL查询依赖于严格的凡是模型，posts和tags存储在不同的表里，而MongoDB假设tags保存在每个post文档对象里。
  ",
  "数据库操作":{
    "1":	"插入和查询（传递查询条件）",
    "2":	"更新文档（增加更新$set，替换更新，删除更新$unset,更新复杂数据，高级更新（$push,$addToSet可以阻止重复的数据））
    a)	高级更新：db.users.update({},{},false,true),第三个参数false控制是否允许upsert，意思就是当一个文档不存在的时候是否插入它，
    第四个参数表示是否是多个更新，false情况下只针对第一个匹配文档，如果想要更新所有匹配的文档，就必须显示指定这个参数。",
    "3":	"删除数据（remove，drop）"
  }
}
